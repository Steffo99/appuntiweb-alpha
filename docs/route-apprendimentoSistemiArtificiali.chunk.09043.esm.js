(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{UlOE:function(l,e,t){"use strict";t.r(e),function(l){t.d(e,"default",(function(){return A}));var i=t("hosL"),n=t("ddBW"),o=(t("ZsnK"),t("9yVG")),a=t("PEwj"),r=(t("7bXG"),t("hwaz"));let u,s,c,d,p,v,h,g,b,m,w,f,L,k,z,C=l=>l;const N=String.raw;class A extends i.Component{render(){return l("div",null,l("h1",null,"Apprendimento ed evoluzione in sistemi artificiali"),l(n.a,{title:"NetLogo"},l(o.a,{title:"Cos'è?"},l("p",null,"NetLogo è un software di modellazione sistemi multiagente."),l("p",null,"Si può ",l("a",{href:"https://ccl.northwestern.edu/netlogo/download.shtml"},"scaricare")," o ",l("a",{href:"https://www.netlogoweb.org/launch"},"usare da browser"),"."),l("p",null,"Il suo codice sorgente è disponibile su ",l("a",{href:"https://github.com/NetLogo/NetLogo"},"GitHub"),", e ha una pagina di ",l("a",{href:"https://ccl.northwestern.edu/netlogo/docs/dictionary.html"},"documentazione"),"."))),l(n.a,{title:"Agenti di NetLogo"},l(o.a,{title:"Observer"},l("p",null,"L'",l("b",null,"utente")," di NetLogo, che vive nel contesto globale e dà ordini agli altri agenti.")),l(o.a,{title:"Turtle"},l("p",null,"Entità che possono ",l("b",null,"muoversi")," per il mondo."),l(a.a,null,"Sono più o meno come le ",l("a",{href:"https://www.computercraft.info/wiki/Turtle"},"Turtle di Computercraft"),"!"),l("p",null,"Possono essere di una ",l("i",null,"breed")," (razza) specifica, definite con:"),l(r.a,null,N(u||(u=C`breed [<plurale> <singolare>]`))),l(a.a,null,"Le breed sono praticamente sottoclassi di turtle.")),l(o.a,{title:"Patch"},l("p",null,"I ",l("b",null,"quadratini")," del mondo. Possono essere di vari colori e avere varie proprietà."),l(a.a,null,"...possiamo dire che questi siano i blocchi di Minecraft?")),l(o.a,{title:"Link"},l("p",null,l("b",null,"Collegamenti")," tra due turtle."))),l(n.a,{title:"Creazione di agenti"},l(o.a,{title:"Observer"},l("p",null,"L'observer viene creato automaticamente all'apertura della simulazione.")),l(o.a,{title:"Turtle"},l("p",null,"Nuove turtle possono essere create con il comando:"),l(r.a,null,N(s||(s=C`<prefisso>-<breed> <quantità>`))),l("p",null,"Dove prefisso varia in base al contesto attuale:"),l("table",null,l("thead",null,l("tr",null,l("th",null,"Contesto"),l("th",null,"Prefisso"))),l("tbody",null,l("tr",null,l("td",null,"Observer"),l("td",null,l("code",null,N(c||(c=C`create`))))),l("tr",null,l("td",null,"Turtle"),l("td",null,l("code",null,N(d||(d=C`hatch`))))),l("tr",null,l("td",null,"Patch"),l("td",null,l("code",null,N(p||(p=C`sprout`))))))))),l(n.a,{title:"Variabili"},l(o.a,{title:"Observer"},l("p",null,"All'inizio del codice:"),l(r.a,null,"globals [var1 var2 var3]"),l(a.a,null,"Sono a tutti gli effetti variabili globali.")),l(o.a,{title:"Turtle"},l("p",null,"Aggiungi proprietà a tutte le turtle:"),l(r.a,null,"turtles-own [var1 var2 var3]"),l("p",null,"Aggiungi proprietà alle turtle di un breed:"),l(r.a,null,"<breed>-own [var1 var2 var3]")),l(o.a,{title:"Patch"},l("p",null,"Aggiungi proprietà alle patch:"),l(r.a,null,N(v||(v=C`patches-own [var1 var2 var3]`)))),l(o.a,{title:"Link"},l("p",null,"Aggiungi proprietà ai link:"),l(r.a,null,N(h||(h=C`links-own [var1 var2 var3]`))))),l(n.a,null,l(o.a,{title:"Locali"},l("p",null,"Si possono creare con:"),l(r.a,null,N(g||(g=C`let <nome> <valore>`)))),l(o.a,{title:"Set"},l("p",null,"Si può impostare il valore di una variabile con:"),l(r.a,null,N(b||(b=C`set <nome> <valore>`))))),l(n.a,{title:"Blocchi di codice"},l(o.a,{title:"Cambi di contesto"},l("p",null,"Per cambiare contesto:"),l(r.a,null,N(m||(m=C`
                            ask <bersaglio> [
                                <blocco di codice>
                            ]
                        `))),l("p",null,"Nel caso ci siano più bersagli, verranno eseguiti uno")),l(o.a,{title:"Commands"},l("p",null,"Funzioni che non restituiscono nulla:"),l(r.a,null,N(w||(w=C`
                            to <nome>
                                <blocco di codice>
                            end
                        `))),l("p",null,"Con argomenti:"),l(r.a,null,N(f||(f=C`
                            to <nome> [var1 var2 var3]
                                <blocco di codice>
                            end
                        `)))),l(o.a,{title:"Reporter"},l("p",null,"Funzioni che restituiscono un valore:"),l(r.a,null,N(L||(L=C`
                            to-report <nome> [var1 var2 var3]
                                <blocco di codice>
                                report <restituito>
                            end
                        `))))),l(n.a,{title:"Comandi per turtle"},l(o.a,{title:"Avanti"},l("p",null,"Muoviti di 10 unità:"),l(r.a,null,N(k||(k=C`
                            forward 10
                            back 10
                        `))),l("p",null,"Nota che la velocità massima delle tartarughe è di 1 unità/tick, quindi muoversi di 10 unità richiederà 10 tick.")),l(o.a,{title:"Ruota"},l("p",null,"Ruota di 10 gradi:"),l(r.a,null,N(z||(z=C`
                            left 10
                            right 10
                        `))))))}}}.call(this,t("hosL").h)}}]);
//# sourceMappingURL=route-apprendimentoSistemiArtificiali.chunk.09043.esm.js.map