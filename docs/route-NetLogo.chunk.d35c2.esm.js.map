{"version":3,"sources":["webpack:///./components/Example.less","webpack:///./routes/NetLogo.js","webpack:///./components/Example.js"],"names":["module","exports","r","String","raw","href","title","language","props","class","style","example","children"],"mappings":"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","file":"route-NetLogo.chunk.d35c2.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"red__2y1B_\",\"orange\":\"orange__dD2kx\",\"yellow\":\"yellow__OEpwl\",\"lime\":\"lime__CVe41\",\"cyan\":\"cyan__26ZAg\",\"blue\":\"blue__LO7Xm\",\"magenta\":\"magenta__1Akee\",\"example\":\"example__2PzAa\"};","import {Code, Panel, Section} from \"bluelib\";\nimport Example from \"../components/Example\";\n\nconst r = String.raw;\n\n\nexport default function (props) {\n    return (\n        <div>\n            <h1>\n                <a href={\"/apprendimento\"}>Apprendimento</a>: NetLogo\n            </h1>\n            <Section title={\"Agenti di NetLogo\"}>\n                <Panel title={\"Observer\"}>\n                    <p>\n                        L'<b>utente</b> di NetLogo, che vive nel contesto globale e dà ordini agli altri agenti.\n                    </p>\n                </Panel>\n                <Panel title={\"Turtle\"}>\n                    <p>\n                        Entità che possono <b>muoversi</b> per il mondo.\n                    </p>\n                    <Example>\n                        Sono più o meno come le <a href={\"https://www.computercraft.info/wiki/Turtle\"}>Turtle di\n                        Computercraft</a>!\n                    </Example>\n                    <p>\n                        Possono essere di una <i>breed</i> (razza) specifica, definite con:\n                    </p>\n                    <Code language={\"lisp\"}>{r`breed [<plurale> <singolare>]`}</Code>\n                    <Example>\n                        Le breed sono praticamente sottoclassi di turtle.\n                    </Example>\n                </Panel>\n                <Panel title={\"Patch\"}>\n                    <p>\n                        I <b>quadratini</b> del mondo. Possono essere di vari colori e avere varie proprietà.\n                    </p>\n                    <Example>\n                        ...possiamo dire che questi siano i blocchi di Minecraft?\n                    </Example>\n                </Panel>\n                <Panel title={\"Link\"}>\n                    <p>\n                        <b>Collegamenti</b> tra due turtle.\n                    </p>\n                </Panel>\n            </Section>\n            <Section title={\"Creazione di agenti\"}>\n                <Panel title={\"Observer\"}>\n                    <p>\n                        L'observer viene creato automaticamente all'apertura della simulazione.\n                    </p>\n                </Panel>\n                <Panel title={\"Turtle\"}>\n                    <p>\n                        Nuove turtle possono essere create con il comando:\n                    </p>\n                    <Code language={\"lisp\"}>{r`<prefisso>-<breed> <quantità>`}</Code>\n                    <p>\n                        Dove prefisso varia in base al contesto attuale:\n                    </p>\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Contesto</th>\n                            <th>Prefisso</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>Observer</td>\n                            <td><Code language={\"lisp\"}>{r`create`}</Code></td>\n                        </tr>\n                        <tr>\n                            <td>Turtle</td>\n                            <td><Code language={\"lisp\"}>{r`hatch`}</Code></td>\n                        </tr>\n                        <tr>\n                            <td>Patch</td>\n                            <td><Code language={\"lisp\"}>{r`sprout`}</Code></td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </Panel>\n            </Section>\n            <Section title={\"Variabili\"}>\n                <Panel title={\"Observer\"}>\n                    <p>\n                        All'inizio del codice:\n                    </p>\n                    <Code language={\"lisp\"}>{`globals [var1 var2 var3]`}</Code>\n                    <Example>\n                        Sono a tutti gli effetti variabili globali.\n                    </Example>\n                </Panel>\n                <Panel title={\"Turtle\"}>\n                    <p>\n                        Aggiungi proprietà a tutte le turtle:\n                    </p>\n                    <Code language={\"lisp\"}>{`turtles-own [var1 var2 var3]`}</Code>\n                    <p>\n                        Aggiungi proprietà alle turtle di un breed:\n                    </p>\n                    <Code language={\"lisp\"}>{`<breed>-own [var1 var2 var3]`}</Code>\n                </Panel>\n                <Panel title={\"Patch\"}>\n                    <p>\n                        Aggiungi proprietà alle patch:\n                    </p>\n                    <Code language={\"lisp\"}>{r`patches-own [var1 var2 var3]`}</Code>\n                </Panel>\n                <Panel title={\"Link\"}>\n                    <p>\n                        Aggiungi proprietà ai link:\n                    </p>\n                    <Code language={\"lisp\"}>{r`links-own [var1 var2 var3]`}</Code>\n                </Panel>\n            </Section>\n            <Section>\n                <Panel title={\"Locali\"}>\n                    <p>\n                        Si possono creare con:\n                    </p>\n                    <Code language={\"lisp\"}>{r`let <nome> <valore>`}</Code>\n                </Panel>\n                <Panel title={\"Set\"}>\n                    <p>\n                        Si può impostare il valore di una variabile con:\n                    </p>\n                    <Code language={\"lisp\"}>{r`set <nome> <valore>`}</Code>\n                </Panel>\n            </Section>\n            <Section title={\"Blocchi di codice\"}>\n                <Panel title={\"Cambi di contesto\"}>\n                    <p>\n                        Per cambiare contesto:\n                    </p>\n                    <Code language={\"lisp\"}>{r`\n                        ask <bersaglio> [\n                            <blocco di codice>\n                        ]\n                    `}</Code>\n                    <p>\n                        Nel caso ci siano più bersagli, verranno eseguiti uno\n                    </p>\n                </Panel>\n                <Panel title={\"Commands\"}>\n                    <p>\n                        Funzioni che non restituiscono nulla:\n                    </p>\n                    <Code language={\"lisp\"}>{r`\n                        to <nome>\n                            <blocco di codice>\n                        end\n                    `}</Code>\n                    <p>\n                        Con argomenti:\n                    </p>\n                    <Code language={\"lisp\"}>{r`\n                        to <nome> [var1 var2 var3]\n                            <blocco di codice>\n                        end\n                    `}</Code>\n                </Panel>\n                <Panel title={\"Reporter\"}>\n                    <p>\n                        Funzioni che restituiscono un valore:\n                    </p>\n                    <Code language={\"lisp\"}>{r`\n                        to-report <nome> [var1 var2 var3]\n                            <blocco di codice>\n                            report <restituito>\n                        end\n                    `}</Code>\n                </Panel>\n            </Section>\n            <Section title={\"Comandi per turtle\"}>\n                <Panel title={\"Avanti\"}>\n                    <p>\n                        Muoviti di 10 unità:\n                    </p>\n                    <Code language={\"lisp\"}>{r`\n                        forward 10\n                        back 10\n                    `}</Code>\n                </Panel>\n                <Panel title={\"Ruota\"}>\n                    <p>\n                        Ruota di 10 gradi:\n                    </p>\n                    <Code language={\"lisp\"}>{r`\n                        left 10\n                        right 10\n                    `}</Code>\n                </Panel>\n            </Section>\n        </div>\n    )\n}\n","import style from \"./Example.less\";\n\nexport default function (props) {\n    return (\n        <div class={style.example}>\n            {props.children}\n        </div>\n    );\n}\n"],"sourceRoot":""}