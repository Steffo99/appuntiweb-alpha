{"version":3,"sources":["webpack:///./routes/apprendimentoSistemiArtificiali.js"],"names":["r","String","raw","ApprendimentoSistemiArtificiali","render","title","href","Component"],"mappings":"6qEAMMA,EAAIC,OAAOC,IAEIC,E,gLACjBC,OAAA,WACI,OACI,aACI,kEACA,EAAC,IAAD,CAAOC,MAAO,WACV,EAAC,IAAD,CAAOA,MAAO,UACV,yEAGA,qBACW,OAAGC,KAAM,uDAAT,aADX,MAC2F,OAAGA,KAAM,qCAAT,oBAD3F,KAGA,sDAC4C,OAAGA,KAAM,sCAAT,UAD5C,wBAC0H,OAAGA,KAAM,6DAAT,kBAD1H,OAKR,EAAC,IAAD,CAAOD,MAAO,qBACV,EAAC,IAAD,CAAOA,MAAO,YACV,gBACM,qBADN,8EAIJ,EAAC,IAAD,CAAOA,MAAO,UACV,iCACuB,uBADvB,kBAGA,EAAC,IAAD,gCAC4B,OAAGC,KAAM,8CAAT,2BAD5B,KAGA,oCAC0B,oBAD1B,qCAGA,EAAC,IAAD,KAAON,EAAP,MACA,EAAC,IAAD,2DAIJ,EAAC,IAAD,CAAOK,MAAO,SACV,gBACM,yBADN,sEAGA,EAAC,IAAD,mEAIJ,EAAC,IAAD,CAAOA,MAAO,QACV,WACI,2BADJ,sBAKR,EAAC,IAAD,CAAOA,MAAO,uBACV,EAAC,IAAD,CAAOA,MAAO,YACV,uFAIJ,EAAC,IAAD,CAAOA,MAAO,UACV,iEAGA,EAAC,IAAD,KAAOL,EAAP,MACA,+DAGA,eACI,eACI,YACI,wBACA,0BAGR,eACI,YACI,wBACA,YAAI,cAAOA,EAAP,QAER,YACI,sBACA,YAAI,cAAOA,EAAP,QAER,YACI,qBACA,YAAI,cAAOA,EAAP,YAMxB,EAAC,IAAD,CAAOK,MAAO,aACV,EAAC,IAAD,CAAOA,MAAO,YACV,qCAGA,EAAC,IAAD,iCACA,EAAC,IAAD,qDAIJ,EAAC,IAAD,CAAOA,MAAO,UACV,oDAGA,EAAC,IAAD,qCACA,0DAGA,EAAC,IAAD,sCAEJ,EAAC,IAAD,CAAOA,MAAO,SACV,6CAGA,EAAC,IAAD,KAAOL,EAAP,OAEJ,EAAC,IAAD,CAAOK,MAAO,QACV,0CAGA,EAAC,IAAD,KAAOL,EAAP,QAGR,EAAC,IAAD,KACI,EAAC,IAAD,CAAOK,MAAO,UACV,qCAGA,EAAC,IAAD,KAAOL,EAAP,OAEJ,EAAC,IAAD,CAAOK,MAAO,OACV,+DAGA,EAAC,IAAD,KAAOL,EAAP,QAGR,EAAC,IAAD,CAAOK,MAAO,qBACV,EAAC,IAAD,CAAOA,MAAO,qBACV,qCAGA,EAAC,IAAD,KAAOL,EAAP,MAKA,qEAIJ,EAAC,IAAD,CAAOK,MAAO,YACV,oDAGA,EAAC,IAAD,KAAOL,EAAP,MAKA,6BAGA,EAAC,IAAD,KAAOA,EAAP,OAMJ,EAAC,IAAD,CAAOK,MAAO,YACV,oDAGA,EAAC,IAAD,KAAOL,EAAP,QAQR,EAAC,IAAD,CAAOK,MAAO,sBACV,EAAC,IAAD,CAAOA,MAAO,UACV,mCAGA,EAAC,IAAD,KAAOL,EAAP,MAIA,gIAIJ,EAAC,IAAD,CAAOK,MAAO,SACV,iCAGA,EAAC,IAAD,KAAOL,EAAP,U,GAvMqCO,c","file":"route-apprendimentoSistemiArtificiali.chunk.d0fa4.js","sourcesContent":["import {Component} from 'preact'\nimport Split from \"../components/old/split\";\nimport Panel from \"../components/old/panel\";\nimport Example from \"../components/example\";\nimport Code from \"../components/old/code\";\n\nconst r = String.raw;\n\nexport default class ApprendimentoSistemiArtificiali extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Apprendimento ed evoluzione in sistemi artificiali</h1>\n                <Split title={\"NetLogo\"}>\n                    <Panel title={\"Cos'è?\"}>\n                        <p>\n                            NetLogo è un software di modellazione sistemi multiagente.\n                        </p>\n                        <p>\n                            Si può <a href={\"https://ccl.northwestern.edu/netlogo/download.shtml\"}>scaricare</a> o <a href={\"https://www.netlogoweb.org/launch\"}>usare da browser</a>.\n                        </p>\n                        <p>\n                            Il suo codice sorgente è disponibile su <a href={\"https://github.com/NetLogo/NetLogo\"}>GitHub</a>, e ha una pagina di <a href={\"https://ccl.northwestern.edu/netlogo/docs/dictionary.html\"}>documentazione</a>.\n                        </p>\n                    </Panel>\n                </Split>\n                <Split title={\"Agenti di NetLogo\"}>\n                    <Panel title={\"Observer\"}>\n                        <p>\n                            L'<b>utente</b> di NetLogo, che vive nel contesto globale e dà ordini agli altri agenti.\n                        </p>\n                    </Panel>\n                    <Panel title={\"Turtle\"}>\n                        <p>\n                            Entità che possono <b>muoversi</b> per il mondo.\n                        </p>\n                        <Example>\n                            Sono più o meno come le <a href={\"https://www.computercraft.info/wiki/Turtle\"}>Turtle di Computercraft</a>!\n                        </Example>\n                        <p>\n                            Possono essere di una <i>breed</i> (razza) specifica, definite con:\n                        </p>\n                        <Code>{r`breed [<plurale> <singolare>]`}</Code>\n                        <Example>\n                            Le breed sono praticamente sottoclassi di turtle.\n                        </Example>\n                    </Panel>\n                    <Panel title={\"Patch\"}>\n                        <p>\n                            I <b>quadratini</b> del mondo. Possono essere di vari colori e avere varie proprietà.\n                        </p>\n                        <Example>\n                            ...possiamo dire che questi siano i blocchi di Minecraft?\n                        </Example>\n                    </Panel>\n                    <Panel title={\"Link\"}>\n                        <p>\n                            <b>Collegamenti</b> tra due turtle.\n                        </p>\n                    </Panel>\n                </Split>\n                <Split title={\"Creazione di agenti\"}>\n                    <Panel title={\"Observer\"}>\n                        <p>\n                            L'observer viene creato automaticamente all'apertura della simulazione.\n                        </p>\n                    </Panel>\n                    <Panel title={\"Turtle\"}>\n                        <p>\n                            Nuove turtle possono essere create con il comando:\n                        </p>\n                        <Code>{r`<prefisso>-<breed> <quantità>`}</Code>\n                        <p>\n                            Dove prefisso varia in base al contesto attuale:\n                        </p>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Contesto</th>\n                                    <th>Prefisso</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Observer</td>\n                                    <td><code>{r`create`}</code></td>\n                                </tr>\n                                <tr>\n                                    <td>Turtle</td>\n                                    <td><code>{r`hatch`}</code></td>\n                                </tr>\n                                <tr>\n                                    <td>Patch</td>\n                                    <td><code>{r`sprout`}</code></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </Panel>\n                </Split>\n                <Split title={\"Variabili\"}>\n                    <Panel title={\"Observer\"}>\n                        <p>\n                            All'inizio del codice:\n                        </p>\n                        <Code>{`globals [var1 var2 var3]`}</Code>\n                        <Example>\n                            Sono a tutti gli effetti variabili globali.\n                        </Example>\n                    </Panel>\n                    <Panel title={\"Turtle\"}>\n                        <p>\n                            Aggiungi proprietà a tutte le turtle:\n                        </p>\n                        <Code>{`turtles-own [var1 var2 var3]`}</Code>\n                        <p>\n                            Aggiungi proprietà alle turtle di un breed:\n                        </p>\n                        <Code>{`<breed>-own [var1 var2 var3]`}</Code>\n                    </Panel>\n                    <Panel title={\"Patch\"}>\n                        <p>\n                            Aggiungi proprietà alle patch:\n                        </p>\n                        <Code>{r`patches-own [var1 var2 var3]`}</Code>\n                    </Panel>\n                    <Panel title={\"Link\"}>\n                        <p>\n                            Aggiungi proprietà ai link:\n                        </p>\n                        <Code>{r`links-own [var1 var2 var3]`}</Code>\n                    </Panel>\n                </Split>\n                <Split>\n                    <Panel title={\"Locali\"}>\n                        <p>\n                            Si possono creare con:\n                        </p>\n                        <Code>{r`let <nome> <valore>`}</Code>\n                    </Panel>\n                    <Panel title={\"Set\"}>\n                        <p>\n                            Si può impostare il valore di una variabile con:\n                        </p>\n                        <Code>{r`set <nome> <valore>`}</Code>\n                    </Panel>\n                </Split>\n                <Split title={\"Blocchi di codice\"}>\n                    <Panel title={\"Cambi di contesto\"}>\n                        <p>\n                            Per cambiare contesto:\n                        </p>\n                        <Code>{r`\n                            ask <bersaglio> [\n                                <blocco di codice>\n                            ]\n                        `}</Code>\n                        <p>\n                            Nel caso ci siano più bersagli, verranno eseguiti uno\n                        </p>\n                    </Panel>\n                    <Panel title={\"Commands\"}>\n                        <p>\n                            Funzioni che non restituiscono nulla:\n                        </p>\n                        <Code>{r`\n                            to <nome>\n                                <blocco di codice>\n                            end\n                        `}</Code>\n                        <p>\n                            Con argomenti:\n                        </p>\n                        <Code>{r`\n                            to <nome> [var1 var2 var3]\n                                <blocco di codice>\n                            end\n                        `}</Code>\n                    </Panel>\n                    <Panel title={\"Reporter\"}>\n                        <p>\n                            Funzioni che restituiscono un valore:\n                        </p>\n                        <Code>{r`\n                            to-report <nome> [var1 var2 var3]\n                                <blocco di codice>\n                                report <restituito>\n                            end\n                        `}</Code>\n                    </Panel>\n                </Split>\n                <Split title={\"Comandi per turtle\"}>\n                    <Panel title={\"Avanti\"}>\n                        <p>\n                            Muoviti di 10 unità:\n                        </p>\n                        <Code>{r`\n                            forward 10\n                            back 10\n                        `}</Code>\n                        <p>\n                            Nota che la velocità massima delle tartarughe è di 1 unità/tick, quindi muoversi di 10 unità richiederà 10 tick.\n                        </p>\n                    </Panel>\n                    <Panel title={\"Ruota\"}>\n                        <p>\n                            Ruota di 10 gradi:\n                        </p>\n                        <Code>{r`\n                            left 10\n                            right 10\n                        `}</Code>\n                    </Panel>\n                </Split>\n\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}